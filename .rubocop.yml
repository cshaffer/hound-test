inherit_from:
  - .rubocop.enabled.yml
  - .rubocop.disabled.yml
  - .rubocop.default.yml

AllCops:
  TargetRubyVersion: 2.3
  Exclude:
    - 'db/schema.rb'

Rails:
  Enabled: true

# Set max line length to 100
Metrics/LineLength:
  Max: 100
  Enabled: true

# Set max method length to 100
Metrics/MethodLength:
  Max: 100

# Renaming `has_something?` to `something?` obfuscates whether it is a 'is-a'
# or a 'has-a' relationship.
Style/PredicateName:
  Enabled: false

# Enforces before_action instead of before_filter, which is a rails 4 only thing
Rails/ActionFilter:
  Enabled: true

# ClassLength, ugh
Metrics/ClassLength:
  Enabled: false

# Because only Paulus cares about documentation
Style/Documentation:
  Enabled: false

# This cop is too aggresive in claiming a guard clause should be used
Style/GuardClause:
  Enabled: false

# rescue in modifier form is very idiomatic and useful in certain situations!
Style/RescueModifier:
  Enabled: false

# Otherwise you get a warning if you do ['Paulus', 'Productive', 'Very']
Style/WordArray:
  Enabled: false

# This cop does not fare well with our increased method length. See http://c2.com/cgi/wiki?AbcMetric
Metrics/AbcSize:
  Enabled: false

Metrics/CyclomaticComplexity:
  Enabled: false

Metrics/PerceivedComplexity:
  Enabled: false

# Avoid chaining a method call on a do...end block.
Style/MethodCalledOnDoEndBlock:
  Enabled: true

# Prefer keyword arguments over option hashes
Style/OptionHash:
  Enabled: true

Style/TrailingCommaInLiteral:
  # If `comma`, the cop requires a comma after the last item in an array or
  # hash, but only when each item is on its own line.
  # If `consistent_comma`, the cop requires a comma after the last item of all
  # non-empty array and hash literals.
  EnforcedStyleForMultiline: comma
